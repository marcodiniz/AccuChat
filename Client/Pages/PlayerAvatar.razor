

<div class="avatar" 
    style="--posX: @posX; --posY:@posY; --avatarX:@avatarX; --avatarY:@avatarY; --stepsCount:@stepsCount">
    <div class="imageCharWalking@(walkingTrigger ? "walking" : "")"></div>
    <div class="imageCharWalking@(walkingTrigger ? "" : "walking")"></div>
    <div class="name">@Player.Name</div>
    <div class="message @(showMessage > 0 ? "" : "hidden")">@Player.Message</div>
</div>
@*<button @onclick="Test">AA</button>*@

@code {
    [Parameter]public Player Player { get; set; }

    bool walkingTrigger = false;

    int posX, posY = 0;
    int stepsCount = 1;

    int avatarX => (Player.AvatarCode % 12) * 3;
    int avatarY => (Player.AvatarCode / 12) * 4 + (int)Player.Dir;
    int showMessage = 0;

    protected override async Task OnInitializedAsync()
    {
        posX = Player.X;
        posY = Player.Y;


        Player.ContentUpdated += (s, a) =>
        {
            if (a == EContentChange.Message)
            {
                ShowMessage();
            }

            if (a == EContentChange.Movement)
            {
                walkingTrigger = !walkingTrigger;
                stepsCount++;
                posX = Player.X;
                posY = Player.Y;
            }

            StateHasChanged();
        };
    }

    private async void ShowMessage()
    {
        showMessage++;
        await Task.Delay(5000);
        showMessage--;
        StateHasChanged();
    }

}

<style>
    .avatar {
        justify-content: center;
        width: 32px;
        height: 48px;
        position: absolute;
        font-size: small;
        text-overflow: ellipsis;
        margin-top: -22px;
        top: calc(var(--posY) * 32px);
        left: calc(var(--posX) * 32px);
        transition: top 0.2s ease-in-out, left 0.2s ease-in-out;
       }

    .message {
        color: white;
        text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000, -2px -2px 2px #000, 2px -2px 2px #000, -2px 2px 2px #000, 2px 2px 2px #000;
        text-overflow: ellipsis;
        text-align: center;
        line-height: 96%;
        position: relative;
        width: auto;
        width: max-content;
        max-width: 200px;
        height: fit-content;
        max-height: 70px;
        transform: translateY(-65px) translateY(-100%) translateX(16px) translateX(-50%);
        z-index: 999;
    }

    .name {
        overflow: hidden;
        white-space: nowrap;
        position: relative;
        bottom: 0;
        transform: translateX(16px) translateX(-50%);
        width: 96px;
        max-width: 96px;
        text-align: center;
        color: palegreen;
        text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
        font-weight: bold;
        font-size: smaller;
        text-overflow: ellipsis;
    }

    .imageCharWalking{
        z-index: var(--posY);
        position: relative;
        @*animation-iteration-count: var(--stepsCount);*@
        @*animation-play-state: running;*@
        animation-name: none;
        animation-name: walk;
    }
</style>
